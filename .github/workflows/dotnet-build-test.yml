# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build PIM .NET and publish

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-project:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Restore dependencies For Lincoln API
      run: dotnet restore LincolnAPI

    - name: Build Lincoln API
      run: dotnet build LincolnAPI --no-restore

    - name: Test Lincoln API
      run: dotnet test APITest --no-build --verbosity normal

    - name: Restore dependencies For BeamerBlazor
      run: dotnet restore BeamerBlazor

    - name: Build BeamerBlazor
      run: dotnet build BeamerBlazor --no-restore

  build-container-LincolnAPI:
    needs: build-project
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build . --file LincolnAPI/Dockerfile --tag kilali/pim:$(date +%s)

 
  push_to_registry:
    needs: build-container-LincolnAPI
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: kilali
          password: dckr_pat_fB85zaUpXI_zfTkXCZ8DE5O2BLs
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: kilali/pim
      
      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: LincolnAPI/Dockerfile
          push: true
          tags: kilali/pim:latest-dev
          labels: ${{ steps.meta.outputs.labels }}

   
